{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\TodoApp\\\\client\\\\src\\\\components\\\\TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, TextField, Typography, Card, CardContent, CardActions, Checkbox, FormControlLabel } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [open, setOpen] = useState(false); // State for dialog visibility\n  const [editMode, setEditMode] = useState(false); // Flag to check if it's an edit mode\n  const [currentTask, setCurrentTask] = useState({\n    _id: '',\n    title: '',\n    description: '',\n    deadline: '',\n    completed: false\n  });\n\n  // Validation errors\n  const [errors, setErrors] = useState({\n    title: '',\n    description: '',\n    deadline: ''\n  });\n\n  // State for delete confirmation dialog\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  const [taskToDelete, setTaskToDelete] = useState(null);\n\n  // Fetch tasks on component mount\n  useEffect(() => {\n    axios.get(`${process.env.REACT_APP_API_URL}/tasks`).then(response => {\n      setTasks(response.data);\n    }).catch(error => {\n      console.error('Error fetching tasks:', error);\n    });\n  }, []);\n\n  // Handle form input changes\n  const handleInputChange = e => {\n    setCurrentTask({\n      ...currentTask,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // Handle Completed checkbox change (Only in Edit mode)\n  const handleCompletedChange = e => {\n    setCurrentTask({\n      ...currentTask,\n      completed: e.target.checked\n    });\n  };\n\n  // Validate the title, description, and deadline\n  const validateFields = () => {\n    const {\n      title,\n      description,\n      deadline\n    } = currentTask;\n    let formValid = true;\n    const newErrors = {\n      title: '',\n      description: '',\n      deadline: ''\n    };\n\n    // Title validation\n    const titleRegex = /^[a-zA-Z0-9 ]*$/; // Allows alphanumeric characters and spaces\n    if (!title) {\n      newErrors.title = 'Title is required';\n      formValid = false;\n    } else if (title.length < 5) {\n      newErrors.title = 'Title must be at least 5 characters';\n      formValid = false;\n    } else if (title.length > 25) {\n      newErrors.title = 'Title must not exceed 25 characters';\n      formValid = false;\n    } else if (!titleRegex.test(title)) {\n      newErrors.title = 'Title must only contain alphanumeric characters and spaces';\n      formValid = false;\n    } else if (title.trim() !== title) {\n      newErrors.title = 'Title must not start or end with spaces';\n      formValid = false;\n    }\n\n    // Description validation (optional)\n    if (description && description.length > 500) {\n      newErrors.description = 'Description must not exceed 500 characters';\n      formValid = false;\n    }\n\n    // Deadline validation\n    if (!deadline) {\n      newErrors.deadline = 'Deadline is required';\n      formValid = false;\n    } else {\n      const currentDate = new Date();\n      const deadlineDate = new Date(deadline);\n      if (deadlineDate <= currentDate) {\n        newErrors.deadline = 'Deadline must be in the future';\n        formValid = false;\n      }\n    }\n    setErrors(newErrors);\n    return formValid;\n  };\n\n  // Handle opening the dialog for adding a new task\n  const handleOpenDialog = () => {\n    setOpen(true);\n    setEditMode(false); // Open in add mode\n    setCurrentTask({\n      _id: '',\n      title: '',\n      description: '',\n      deadline: '',\n      completed: false\n    });\n    setErrors({\n      title: '',\n      description: '',\n      deadline: ''\n    }); // Reset errors\n  };\n\n  // Handle opening the dialog for editing a task\n  const handleOpenEditDialog = task => {\n    setOpen(true);\n    setEditMode(true); // Open in edit mode\n    setCurrentTask({\n      _id: task._id,\n      title: task.title,\n      description: task.description,\n      deadline: task.deadline.split('T')[0],\n      // Ensure the deadline is in the correct format (YYYY-MM-DD)\n      completed: task.completed\n    });\n    setErrors({\n      title: '',\n      description: '',\n      deadline: ''\n    }); // Reset errors\n  };\n\n  // Handle closing the dialog\n  const handleCloseDialog = () => {\n    setOpen(false);\n    setCurrentTask({\n      _id: '',\n      title: '',\n      description: '',\n      deadline: '',\n      completed: false\n    }); // Reset the form when dialog is closed\n    setErrors({\n      title: '',\n      description: '',\n      deadline: ''\n    }); // Reset errors\n  };\n\n  // Handle adding or editing a task\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Validate fields before submitting\n    if (validateFields()) {\n      if (editMode) {\n        // Update the task\n        axios.put(`${process.env.REACT_APP_API_URL}/tasks/${currentTask._id}`, currentTask).then(response => {\n          setTasks(tasks.map(task => task._id === currentTask._id ? response.data : task));\n          handleCloseDialog();\n        }).catch(error => {\n          console.error('Error editing task:', error);\n          alert('Failed to edit task');\n        });\n      } else {\n        // Create a new task\n        axios.post(`${process.env.REACT_APP_API_URL}/tasks`, currentTask).then(response => {\n          setTasks([...tasks, response.data]);\n          handleCloseDialog();\n        }).catch(error => {\n          console.error('Error adding task:', error);\n          alert('Failed to add task');\n        });\n      }\n    }\n  };\n\n  // Handle task deletion\n  const handleDelete = taskId => {\n    axios.delete(`${process.env.REACT_APP_API_URL}/tasks/${taskId}`).then(() => {\n      setTasks(tasks.filter(task => task._id !== taskId));\n      setDeleteDialogOpen(false); // Close the delete confirmation dialog\n    }).catch(error => {\n      console.error('Error deleting task:', error);\n      alert('Failed to delete task');\n      setDeleteDialogOpen(false); // Close the dialog in case of error\n    });\n  };\n\n  // Open delete confirmation dialog\n  const openDeleteDialog = task => {\n    setTaskToDelete(task);\n    setDeleteDialogOpen(true);\n  };\n\n  // Close delete confirmation dialog\n  const closeDeleteDialog = () => {\n    setDeleteDialogOpen(false);\n    setTaskToDelete(null); // Reset task to delete\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"To-Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleOpenDialog,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        gap: '20px',\n        marginTop: '20px'\n      },\n      children: tasks.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"No tasks available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this) : tasks.map(task => /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          width: '300px',\n          boxShadow: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            style: {\n              textDecoration: task.completed ? 'line-through' : 'none'\n            },\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            children: task.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            children: [\"Deadline: \", task.deadline]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: task.completed ? 'green' : 'red',\n            children: task.completed ? 'Completed' : 'Pending'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            color: \"primary\",\n            onClick: () => handleOpenEditDialog(task),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            color: \"error\",\n            onClick: () => openDeleteDialog(task),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 15\n        }, this)]\n      }, task._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleCloseDialog,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: editMode ? 'Edit Task' : 'Add New Task'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Title\",\n            name: \"title\",\n            value: currentTask.title,\n            onChange: handleInputChange,\n            fullWidth: true,\n            required: true,\n            margin: \"normal\",\n            error: !!errors.title,\n            helperText: errors.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Description\",\n            name: \"description\",\n            value: currentTask.description,\n            onChange: handleInputChange,\n            fullWidth: true,\n            margin: \"normal\",\n            error: !!errors.description,\n            helperText: errors.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Deadline\",\n            name: \"deadline\",\n            type: \"datetime-local\",\n            value: currentTask.deadline,\n            onChange: handleInputChange,\n            fullWidth: true,\n            required: true,\n            margin: \"normal\",\n            error: !!errors.deadline,\n            helperText: errors.deadline\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this), editMode && /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: currentTask.completed,\n              onChange: handleCompletedChange,\n              name: \"completed\",\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 19\n            }, this),\n            label: \"Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleCloseDialog,\n              color: \"secondary\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              color: \"primary\",\n              children: editMode ? 'Update Task' : 'Add Task'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: deleteDialogOpen,\n      onClose: closeDeleteDialog,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Confirm Deletion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Are you sure you want to delete this task?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: closeDeleteDialog,\n          color: \"secondary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            if (taskToDelete) handleDelete(taskToDelete._id);\n          },\n          color: \"error\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"Em3WmzOrWsSlKjN1dpG0A0H+gHc=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","useEffect","axios","Box","Button","Dialog","DialogActions","DialogContent","DialogTitle","TextField","Typography","Card","CardContent","CardActions","Checkbox","FormControlLabel","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","open","setOpen","editMode","setEditMode","currentTask","setCurrentTask","_id","title","description","deadline","completed","errors","setErrors","deleteDialogOpen","setDeleteDialogOpen","taskToDelete","setTaskToDelete","get","process","env","REACT_APP_API_URL","then","response","data","catch","error","console","handleInputChange","e","target","name","value","handleCompletedChange","checked","validateFields","formValid","newErrors","titleRegex","length","test","trim","currentDate","Date","deadlineDate","handleOpenDialog","handleOpenEditDialog","task","split","handleCloseDialog","handleSubmit","preventDefault","put","map","alert","post","handleDelete","taskId","delete","filter","openDeleteDialog","closeDeleteDialog","sx","padding","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","color","onClick","display","flexWrap","gap","marginTop","width","boxShadow","style","textDecoration","size","onClose","onSubmit","label","onChange","fullWidth","required","margin","helperText","type","control","_c","$RefreshReg$"],"sources":["C:/Users/DELL/TodoApp/client/src/components/TaskList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, TextField, Typography, Card, CardContent, CardActions, Checkbox, FormControlLabel } from '@mui/material';\r\n\r\nconst TaskList = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [open, setOpen] = useState(false); // State for dialog visibility\r\n  const [editMode, setEditMode] = useState(false); // Flag to check if it's an edit mode\r\n  const [currentTask, setCurrentTask] = useState({\r\n    _id: '',\r\n    title: '',\r\n    description: '',\r\n    deadline: '',\r\n    completed: false,\r\n  });\r\n\r\n  // Validation errors\r\n  const [errors, setErrors] = useState({\r\n    title: '',\r\n    description: '',\r\n    deadline: '',\r\n  });\r\n\r\n  // State for delete confirmation dialog\r\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\r\n  const [taskToDelete, setTaskToDelete] = useState(null);\r\n\r\n  // Fetch tasks on component mount\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_URL}/tasks`)\r\n      .then((response) => {\r\n        setTasks(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching tasks:', error);\r\n      });\r\n  }, []);\r\n\r\n  // Handle form input changes\r\n  const handleInputChange = (e) => {\r\n    setCurrentTask({ ...currentTask, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // Handle Completed checkbox change (Only in Edit mode)\r\n  const handleCompletedChange = (e) => {\r\n    setCurrentTask({ ...currentTask, completed: e.target.checked });\r\n  };\r\n\r\n  // Validate the title, description, and deadline\r\n  const validateFields = () => {\r\n    const { title, description, deadline } = currentTask;\r\n    let formValid = true;\r\n    const newErrors = { title: '', description: '', deadline: '' };\r\n  \r\n    // Title validation\r\n    const titleRegex = /^[a-zA-Z0-9 ]*$/; // Allows alphanumeric characters and spaces\r\n    if (!title) {\r\n      newErrors.title = 'Title is required';\r\n      formValid = false;\r\n    } else if (title.length < 5) {\r\n      newErrors.title = 'Title must be at least 5 characters';\r\n      formValid = false;\r\n    } else if (title.length > 25) {\r\n      newErrors.title = 'Title must not exceed 25 characters';\r\n      formValid = false;\r\n    } else if (!titleRegex.test(title)) {\r\n      newErrors.title = 'Title must only contain alphanumeric characters and spaces';\r\n      formValid = false;\r\n    } else if (title.trim() !== title) {\r\n      newErrors.title = 'Title must not start or end with spaces';\r\n      formValid = false;\r\n    }\r\n  \r\n    // Description validation (optional)\r\n    if (description && description.length > 500) {\r\n      newErrors.description = 'Description must not exceed 500 characters';\r\n      formValid = false;\r\n    }\r\n  \r\n    // Deadline validation\r\n    if (!deadline) {\r\n      newErrors.deadline = 'Deadline is required';\r\n      formValid = false;\r\n    } else {\r\n      const currentDate = new Date();\r\n      const deadlineDate = new Date(deadline);\r\n      if (deadlineDate <= currentDate) {\r\n        newErrors.deadline = 'Deadline must be in the future';\r\n        formValid = false;\r\n      }\r\n    }\r\n  \r\n    setErrors(newErrors);\r\n    return formValid;\r\n  };\r\n  \r\n\r\n  // Handle opening the dialog for adding a new task\r\n  const handleOpenDialog = () => {\r\n    setOpen(true);\r\n    setEditMode(false); // Open in add mode\r\n    setCurrentTask({\r\n      _id: '',\r\n      title: '',\r\n      description: '',\r\n      deadline: '',\r\n      completed: false,\r\n    });\r\n    setErrors({ title: '', description: '', deadline: '' }); // Reset errors\r\n  };\r\n\r\n  // Handle opening the dialog for editing a task\r\n  const handleOpenEditDialog = (task) => {\r\n    setOpen(true);\r\n    setEditMode(true); // Open in edit mode\r\n    setCurrentTask({\r\n      _id: task._id,\r\n      title: task.title,\r\n      description: task.description,\r\n      deadline: task.deadline.split('T')[0], // Ensure the deadline is in the correct format (YYYY-MM-DD)\r\n      completed: task.completed,\r\n    });\r\n    setErrors({ title: '', description: '', deadline: '' }); // Reset errors\r\n  };\r\n\r\n  // Handle closing the dialog\r\n  const handleCloseDialog = () => {\r\n    setOpen(false);\r\n    setCurrentTask({\r\n      _id: '',\r\n      title: '',\r\n      description: '',\r\n      deadline: '',\r\n      completed: false,\r\n    }); // Reset the form when dialog is closed\r\n    setErrors({ title: '', description: '', deadline: '' }); // Reset errors\r\n  };\r\n\r\n  // Handle adding or editing a task\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Validate fields before submitting\r\n    if (validateFields()) {\r\n      if (editMode) {\r\n        // Update the task\r\n        axios\r\n          .put(`${process.env.REACT_APP_API_URL}/tasks/${currentTask._id}`, currentTask)\r\n          .then((response) => {\r\n            setTasks(tasks.map((task) => (task._id === currentTask._id ? response.data : task)));\r\n            handleCloseDialog();\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error editing task:', error);\r\n            alert('Failed to edit task');\r\n          });\r\n      } else {\r\n        // Create a new task\r\n        axios\r\n          .post(`${process.env.REACT_APP_API_URL}/tasks`, currentTask)\r\n          .then((response) => {\r\n            setTasks([...tasks, response.data]);\r\n            handleCloseDialog();\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error adding task:', error);\r\n            alert('Failed to add task');\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  // Handle task deletion\r\n  const handleDelete = (taskId) => {\r\n    axios\r\n      .delete(`${process.env.REACT_APP_API_URL}/tasks/${taskId}`)\r\n      .then(() => {\r\n        setTasks(tasks.filter((task) => task._id !== taskId));\r\n        setDeleteDialogOpen(false); // Close the delete confirmation dialog\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error deleting task:', error);\r\n        alert('Failed to delete task');\r\n        setDeleteDialogOpen(false); // Close the dialog in case of error\r\n      });\r\n  };\r\n\r\n  // Open delete confirmation dialog\r\n  const openDeleteDialog = (task) => {\r\n    setTaskToDelete(task);\r\n    setDeleteDialogOpen(true);\r\n  };\r\n\r\n  // Close delete confirmation dialog\r\n  const closeDeleteDialog = () => {\r\n    setDeleteDialogOpen(false);\r\n    setTaskToDelete(null); // Reset task to delete\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ padding: '20px' }}>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        To-Do List\r\n      </Typography>\r\n\r\n      {/* Button to open the \"Add Task\" dialog */}\r\n      <Button variant=\"contained\" color=\"primary\" onClick={handleOpenDialog}>\r\n        Add Task\r\n      </Button>\r\n\r\n      {/* Task Cards */}\r\n      <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: '20px', marginTop: '20px' }}>\r\n        {tasks.length === 0 ? (\r\n          <Typography>No tasks available</Typography>\r\n        ) : (\r\n          tasks.map((task) => (\r\n            <Card key={task._id} sx={{ width: '300px', boxShadow: 3 }}>\r\n              <CardContent>\r\n                <Typography variant=\"h6\" style={{ textDecoration: task.completed ? 'line-through' : 'none' }}>\r\n                  {task.title}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  {task.description}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  Deadline: {task.deadline}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color={task.completed ? 'green' : 'red'}>\r\n                  {task.completed ? 'Completed' : 'Pending'}\r\n                </Typography>\r\n              </CardContent>\r\n              <CardActions>\r\n                <Button size=\"small\" color=\"primary\" onClick={() => handleOpenEditDialog(task)}>\r\n                  Edit\r\n                </Button>\r\n                <Button size=\"small\" color=\"error\" onClick={() => openDeleteDialog(task)}>\r\n                  Delete\r\n                </Button>\r\n              </CardActions>\r\n            </Card>\r\n          ))\r\n        )}\r\n      </Box>\r\n\r\n      {/* Dialog for adding or editing a task */}\r\n      <Dialog open={open} onClose={handleCloseDialog}>\r\n        <DialogTitle>{editMode ? 'Edit Task' : 'Add New Task'}</DialogTitle>\r\n        <DialogContent>\r\n          <form onSubmit={handleSubmit}>\r\n            <TextField\r\n              label=\"Title\"\r\n              name=\"title\"\r\n              value={currentTask.title}\r\n              onChange={handleInputChange}\r\n              fullWidth\r\n              required\r\n              margin=\"normal\"\r\n              error={!!errors.title}\r\n              helperText={errors.title}\r\n            />\r\n            <TextField\r\n              label=\"Description\"\r\n              name=\"description\"\r\n              value={currentTask.description}\r\n              onChange={handleInputChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              error={!!errors.description}\r\n              helperText={errors.description}\r\n            />\r\n            <TextField\r\n              label=\"Deadline\"\r\n              name=\"deadline\"\r\n              type=\"datetime-local\"\r\n              value={currentTask.deadline}\r\n              onChange={handleInputChange}\r\n              fullWidth\r\n              required\r\n              margin=\"normal\"\r\n              error={!!errors.deadline}\r\n              helperText={errors.deadline}\r\n            />\r\n            {/* Only show Completed checkbox in Edit mode */}\r\n            {editMode && (\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={currentTask.completed}\r\n                    onChange={handleCompletedChange}\r\n                    name=\"completed\"\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label=\"Completed\"\r\n              />\r\n            )}\r\n            <DialogActions>\r\n              <Button onClick={handleCloseDialog} color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n              <Button type=\"submit\" color=\"primary\">\r\n                {editMode ? 'Update Task' : 'Add Task'}\r\n              </Button>\r\n            </DialogActions>\r\n          </form>\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      {/* Delete Confirmation Dialog */}\r\n      <Dialog open={deleteDialogOpen} onClose={closeDeleteDialog}>\r\n        <DialogTitle>Confirm Deletion</DialogTitle>\r\n        <DialogContent>\r\n          <Typography>Are you sure you want to delete this task?</Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={closeDeleteDialog} color=\"secondary\">\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              if (taskToDelete) handleDelete(taskToDelete._id);\r\n            }}\r\n            color=\"error\"\r\n          >\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}