{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\TodoApp\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { Container, Typography, Box, Button, useMediaQuery } from '@mui/material';\nimport { ThemeProvider } from '@mui/material/styles';\nimport { CssBaseline } from '@mui/material';\nimport { lightTheme, darkTheme } from './theme'; // Import both themes\nimport { Brightness4, Brightness7 } from '@mui/icons-material'; // Import Material UI icons\nimport TaskList from './components/TaskList';\nimport OnboardingGuide from './components/OnboardingGuide';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const savedTheme = localStorage.getItem('theme');\n  const [isDarkMode, setIsDarkMode] = useState(savedTheme === 'dark');\n  const isMobile = useMediaQuery('(max-width:600px)'); // Media query for mobile screens\n\n  useEffect(() => {\n    // Save theme preference in localStorage when it changes\n    localStorage.setItem('theme', isDarkMode ? 'dark' : 'light');\n  }, [isDarkMode]);\n  const toggleTheme = () => {\n    setIsDarkMode(!isDarkMode);\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: isDarkMode ? darkTheme : lightTheme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: false // No max-width to avoid default margin\n      ,\n      sx: {\n        paddingTop: 2,\n        paddingLeft: isMobile ? 2 : 2,\n        // Adjust left padding based on screen size\n        paddingRight: isMobile ? 2 : 2,\n        // Adjust right padding based on screen size\n        width: '100%' // Make sure the container spans full width\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          marginBottom: 3 // Adjust margin bottom for consistent spacing\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          component: \"h1\",\n          sx: {\n            fontFamily: '\"Roboto\", sans-serif',\n            // Using the Roboto font\n            fontWeight: 'bold',\n            color: isDarkMode ? '#FFFFFF' : '#121C2F',\n            // Light text for dark mode, dark text for light mode\n            marginLeft: isMobile ? 0 : 2 // Remove left margin on mobile\n          },\n          children: \"To-Do List Application\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: toggleTheme,\n          sx: {\n            backgroundColor: isDarkMode ? '#2196F3' : '#0D47A1',\n            // Blue background depending on mode\n            color: '#FFFFFF',\n            padding: '10px 20px',\n            borderRadius: '8px',\n            boxShadow: 3,\n            '&:hover': {\n              backgroundColor: isDarkMode ? '#1976D2' : '#0B3C8C' // Hover effect\n            },\n            marginLeft: 'auto' // Push the button to the right end\n          },\n          startIcon: isDarkMode ? /*#__PURE__*/_jsxDEV(Brightness7, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 37\n          }, this) : /*#__PURE__*/_jsxDEV(Brightness4, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 55\n          }, this) // Icon for switching themes\n          ,\n          children: !isMobile && `Switch to ${isDarkMode ? 'Light' : 'Dark'} Mode`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OnboardingGuide, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"nsy3jj5HyYG13mXIpvIzzi9whQY=\", false, function () {\n  return [useMediaQuery];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Container","Typography","Box","Button","useMediaQuery","ThemeProvider","CssBaseline","lightTheme","darkTheme","Brightness4","Brightness7","TaskList","OnboardingGuide","jsxDEV","_jsxDEV","App","_s","savedTheme","localStorage","getItem","isDarkMode","setIsDarkMode","isMobile","setItem","toggleTheme","theme","children","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","sx","paddingTop","paddingLeft","paddingRight","width","display","justifyContent","alignItems","marginBottom","variant","component","fontFamily","fontWeight","color","marginLeft","onClick","backgroundColor","padding","borderRadius","boxShadow","startIcon","_c","$RefreshReg$"],"sources":["C:/Users/DELL/TodoApp/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { Container, Typography, Box, Button, useMediaQuery } from '@mui/material';\nimport { ThemeProvider } from '@mui/material/styles';\nimport { CssBaseline } from '@mui/material';\nimport { lightTheme, darkTheme } from './theme'; // Import both themes\nimport { Brightness4, Brightness7 } from '@mui/icons-material'; // Import Material UI icons\nimport TaskList from './components/TaskList';\nimport OnboardingGuide from './components/OnboardingGuide';\n\nfunction App() {\n  const savedTheme = localStorage.getItem('theme');\n  const [isDarkMode, setIsDarkMode] = useState(savedTheme === 'dark');\n  const isMobile = useMediaQuery('(max-width:600px)'); // Media query for mobile screens\n\n  useEffect(() => {\n    // Save theme preference in localStorage when it changes\n    localStorage.setItem('theme', isDarkMode ? 'dark' : 'light');\n  }, [isDarkMode]);\n\n  const toggleTheme = () => {\n    setIsDarkMode(!isDarkMode);\n  };\n\n  return (\n    <ThemeProvider theme={isDarkMode ? darkTheme : lightTheme}>\n      <CssBaseline />\n      <Container\n        maxWidth={false} // No max-width to avoid default margin\n        sx={{\n          paddingTop: 2,\n          paddingLeft: isMobile ? 2 : 2, // Adjust left padding based on screen size\n          paddingRight: isMobile ? 2 : 2, // Adjust right padding based on screen size\n          width: '100%', // Make sure the container spans full width\n        }}\n      >\n        {/* Row for Title and Button */}\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginBottom: 3, // Adjust margin bottom for consistent spacing\n          }}\n        >\n          {/* Title aligned to the left */}\n          <Typography\n            variant=\"h3\"\n            component=\"h1\"\n            sx={{\n              fontFamily: '\"Roboto\", sans-serif', // Using the Roboto font\n              fontWeight: 'bold',\n              color: isDarkMode ? '#FFFFFF' : '#121C2F', // Light text for dark mode, dark text for light mode\n              marginLeft: isMobile ? 0 : 2, // Remove left margin on mobile\n            }}\n          >\n            To-Do List Application\n          </Typography>\n\n          {/* Button aligned to the right */}\n          <Button\n            variant=\"contained\"\n            onClick={toggleTheme}\n            sx={{\n              backgroundColor: isDarkMode ? '#2196F3' : '#0D47A1', // Blue background depending on mode\n              color: '#FFFFFF',\n              padding: '10px 20px',\n              borderRadius: '8px',\n              boxShadow: 3,\n              '&:hover': {\n                backgroundColor: isDarkMode ? '#1976D2' : '#0B3C8C', // Hover effect\n              },\n              marginLeft: 'auto', // Push the button to the right end\n            }}\n            startIcon={isDarkMode ? <Brightness7 /> : <Brightness4 />} // Icon for switching themes\n          >\n            {/* Display the name and icon conditionally */}\n            {!isMobile && `Switch to ${isDarkMode ? 'Light' : 'Dark'} Mode`}\n          </Button>\n        </Box>\n\n        {/* Onboarding Guide and Task List */}\n        <OnboardingGuide />\n        <TaskList />\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}