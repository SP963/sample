{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\TodoApp\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { Container, Typography, Box, Button } from '@mui/material';\nimport { ThemeProvider } from '@mui/material/styles';\nimport { CssBaseline } from '@mui/material'; // Global reset\nimport { lightTheme, darkTheme } from './theme'; // Import both themes\nimport TaskList from './components/TaskList';\nimport OnboardingGuide from './components/OnboardingGuide';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State to toggle between light and dark themes\n  const [isDarkMode, setIsDarkMode] = useState(false);\n\n  // Switch theme when button is clicked\n  const toggleTheme = () => {\n    setIsDarkMode(!isDarkMode);\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: isDarkMode ? darkTheme : lightTheme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      sx: {\n        paddingTop: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        textAlign: \"center\",\n        marginBottom: 3,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          component: \"h1\",\n          children: \"To-Do List Application\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        textAlign: \"center\",\n        marginBottom: 3,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: toggleTheme,\n          children: [\"Switch to \", isDarkMode ? 'Light' : 'Dark', \" Mode\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OnboardingGuide, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"vYJNNV25FHwH0TTZOrX//UDd4kA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Container","Typography","Box","Button","ThemeProvider","CssBaseline","lightTheme","darkTheme","TaskList","OnboardingGuide","jsxDEV","_jsxDEV","App","_s","isDarkMode","setIsDarkMode","toggleTheme","theme","children","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","sx","paddingTop","textAlign","marginBottom","variant","component","onClick","_c","$RefreshReg$"],"sources":["C:/Users/DELL/TodoApp/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { Container, Typography, Box, Button } from '@mui/material';\nimport { ThemeProvider } from '@mui/material/styles';\nimport { CssBaseline } from '@mui/material'; // Global reset\nimport { lightTheme, darkTheme } from './theme'; // Import both themes\nimport TaskList from './components/TaskList';\nimport OnboardingGuide from './components/OnboardingGuide';\n\nfunction App() {\n  // State to toggle between light and dark themes\n  const [isDarkMode, setIsDarkMode] = useState(false);\n\n  // Switch theme when button is clicked\n  const toggleTheme = () => {\n    setIsDarkMode(!isDarkMode);\n  };\n\n  return (\n    <ThemeProvider theme={isDarkMode ? darkTheme : lightTheme}>\n      <CssBaseline /> {/* Apply baseline CSS reset */}\n      <Container maxWidth=\"md\" sx={{ paddingTop: 4 }}>\n        <Box textAlign=\"center\" marginBottom={3}>\n          <Typography variant=\"h3\" component=\"h1\">\n            To-Do List Application\n          </Typography>\n        </Box>\n        \n        {/* Button to toggle between dark and light themes */}\n        <Box textAlign=\"center\" marginBottom={3}>\n          <Button variant=\"contained\" onClick={toggleTheme}>\n            Switch to {isDarkMode ? 'Light' : 'Dark'} Mode\n          </Button>\n        </Box>\n        \n        {/* Onboarding guide component */}\n        <OnboardingGuide />\n        {/* Task list component */}\n        <TaskList />\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,SAASC,SAAS,EAAEC,UAAU,EAAEC,GAAG,EAAEC,MAAM,QAAQ,eAAe;AAClE,SAASC,aAAa,QAAQ,sBAAsB;AACpD,SAASC,WAAW,QAAQ,eAAe,CAAC,CAAC;AAC7C,SAASC,UAAU,EAAEC,SAAS,QAAQ,SAAS,CAAC,CAAC;AACjD,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,eAAe,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;;EAEnD;EACA,MAAMkB,WAAW,GAAGA,CAAA,KAAM;IACxBD,aAAa,CAAC,CAACD,UAAU,CAAC;EAC5B,CAAC;EAED,oBACEH,OAAA,CAACP,aAAa;IAACa,KAAK,EAAEH,UAAU,GAAGP,SAAS,GAAGD,UAAW;IAAAY,QAAA,gBACxDP,OAAA,CAACN,WAAW;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,KAAC,eAChBX,OAAA,CAACX,SAAS;MAACuB,QAAQ,EAAC,IAAI;MAACC,EAAE,EAAE;QAAEC,UAAU,EAAE;MAAE,CAAE;MAAAP,QAAA,gBAC7CP,OAAA,CAACT,GAAG;QAACwB,SAAS,EAAC,QAAQ;QAACC,YAAY,EAAE,CAAE;QAAAT,QAAA,eACtCP,OAAA,CAACV,UAAU;UAAC2B,OAAO,EAAC,IAAI;UAACC,SAAS,EAAC,IAAI;UAAAX,QAAA,EAAC;QAExC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC,eAGNX,OAAA,CAACT,GAAG;QAACwB,SAAS,EAAC,QAAQ;QAACC,YAAY,EAAE,CAAE;QAAAT,QAAA,eACtCP,OAAA,CAACR,MAAM;UAACyB,OAAO,EAAC,WAAW;UAACE,OAAO,EAAEd,WAAY;UAAAE,QAAA,GAAC,YACtC,EAACJ,UAAU,GAAG,OAAO,GAAG,MAAM,EAAC,OAC3C;QAAA;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAGNX,OAAA,CAACF,eAAe;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAEnBX,OAAA,CAACH,QAAQ;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEpB;AAACT,EAAA,CAjCQD,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AAmCZ,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}