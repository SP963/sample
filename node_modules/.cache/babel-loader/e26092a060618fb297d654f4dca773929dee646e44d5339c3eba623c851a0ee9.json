{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\TodoApp\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo } from 'react';\nimport { CssBaseline, ThemeProvider, Container, Box, Typography, Button } from '@mui/material';\nimport { lightTheme, darkTheme } from './theme'; // Import your themes\nimport TaskList from './components/TaskList';\nimport OnboardingGuide from './components/OnboardingGuide';\nimport { useMediaQuery } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State to toggle between light and dark theme\n  const [isDarkMode, setIsDarkMode] = useState(false);\n\n  // Automatically determine the theme based on the user preference or toggle state\n  const theme = useMemo(() => isDarkMode ? darkTheme : lightTheme, [isDarkMode]);\n\n  // Media query to check if the screen size is small (for mobile view)\n  const isMobile = useMediaQuery('(max-width:600px)');\n  const toggleTheme = () => {\n    setIsDarkMode(prevMode => !prevMode);\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      sx: {\n        paddingTop: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          marginBottom: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          component: \"h1\",\n          sx: {\n            fontWeight: 600\n          },\n          children: \"To-Do List Application\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: toggleTheme,\n          sx: {\n            borderRadius: '50%',\n            // Circular button\n            padding: '10px',\n            backgroundColor: isDarkMode ? theme.palette.secondary.main : theme.palette.primary.main,\n            '&:hover': {\n              backgroundColor: isDarkMode ? theme.palette.secondary.dark : theme.palette.primary.dark\n            }\n          },\n          children: isMobile ? isDarkMode ? /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-moon\",\n            style: {\n              color: 'white'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-sun\",\n            style: {\n              color: 'yellow'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this) : isDarkMode ? 'Switch to Light Mode' : 'Switch to Dark Mode'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OnboardingGuide, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0tMjP6w1aYmrQT5mpksPG8lToUM=\", false, function () {\n  return [useMediaQuery];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useMemo","CssBaseline","ThemeProvider","Container","Box","Typography","Button","lightTheme","darkTheme","TaskList","OnboardingGuide","useMediaQuery","jsxDEV","_jsxDEV","App","_s","isDarkMode","setIsDarkMode","theme","isMobile","toggleTheme","prevMode","children","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","sx","paddingTop","display","justifyContent","alignItems","marginBottom","variant","component","fontWeight","onClick","borderRadius","padding","backgroundColor","palette","secondary","main","primary","dark","className","style","color","_c","$RefreshReg$"],"sources":["C:/Users/DELL/TodoApp/client/src/App.js"],"sourcesContent":["import React, { useState, useMemo } from 'react';\nimport { CssBaseline, ThemeProvider, Container, Box, Typography, Button } from '@mui/material';\nimport { lightTheme, darkTheme } from './theme'; // Import your themes\nimport TaskList from './components/TaskList';\nimport OnboardingGuide from './components/OnboardingGuide';\nimport { useMediaQuery } from '@mui/material';\n\nfunction App() {\n  // State to toggle between light and dark theme\n  const [isDarkMode, setIsDarkMode] = useState(false);\n\n  // Automatically determine the theme based on the user preference or toggle state\n  const theme = useMemo(() => (isDarkMode ? darkTheme : lightTheme), [isDarkMode]);\n\n  // Media query to check if the screen size is small (for mobile view)\n  const isMobile = useMediaQuery('(max-width:600px)');\n\n  const toggleTheme = () => {\n    setIsDarkMode((prevMode) => !prevMode);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline /> {/* This ensures the theme styles are applied globally */}\n      \n      <Container maxWidth=\"md\" sx={{ paddingTop: 4 }}>\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: 3 }}>\n          {/* Title aligned to left */}\n          <Typography variant=\"h3\" component=\"h1\" sx={{ fontWeight: 600 }}>\n            To-Do List Application\n          </Typography>\n          \n          {/* Button to switch between dark and light mode */}\n          <Button\n            variant=\"contained\"\n            onClick={toggleTheme}\n            sx={{\n              borderRadius: '50%', // Circular button\n              padding: '10px',\n              backgroundColor: isDarkMode ? theme.palette.secondary.main : theme.palette.primary.main,\n              '&:hover': {\n                backgroundColor: isDarkMode ? theme.palette.secondary.dark : theme.palette.primary.dark,\n              }\n            }}\n          >\n            {/* Icon only for mobile view */}\n            {isMobile ? (\n              isDarkMode ? (\n                <i className=\"fa fa-moon\" style={{ color: 'white' }} />\n              ) : (\n                <i className=\"fa fa-sun\" style={{ color: 'yellow' }} />\n              )\n            ) : (\n              isDarkMode ? 'Switch to Light Mode' : 'Switch to Dark Mode'\n            )}\n          </Button>\n        </Box>\n        \n        <OnboardingGuide />\n        <TaskList />\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}