{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\TodoApp\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { Container, Typography, Box, Button, useMediaQuery, AppBar, Toolbar } from '@mui/material';\nimport { ThemeProvider } from '@mui/material/styles';\nimport { CssBaseline } from '@mui/material';\nimport { lightTheme, darkTheme } from './theme'; // Import both themes\nimport { Brightness4, Brightness7 } from '@mui/icons-material'; // Import Material UI icons\nimport TaskList from './components/TaskList';\nimport OnboardingGuide from './components/OnboardingGuide';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const savedTheme = localStorage.getItem('theme');\n  const [isDarkMode, setIsDarkMode] = useState(savedTheme === 'dark');\n  const isMobile = useMediaQuery('(max-width:600px)'); // Media query for mobile screens\n\n  useEffect(() => {\n    // Save theme preference in localStorage when it changes\n    localStorage.setItem('theme', isDarkMode ? 'dark' : 'light');\n  }, [isDarkMode]);\n  const toggleTheme = () => {\n    setIsDarkMode(!isDarkMode);\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: isDarkMode ? darkTheme : lightTheme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      sx: {\n        backgroundColor: isDarkMode ? '#0D47A1' : '#2196F3'\n      },\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          component: \"h1\",\n          sx: {\n            fontFamily: '\"Roboto\", sans-serif',\n            // Using the Roboto font\n            fontWeight: 'bold',\n            color: '#FFFFFF',\n            // Text color is always white on AppBar\n            fontSize: '1.5rem',\n            marginLeft: isMobile ? 0 : 2 // Adjust left margin based on screen size\n          },\n          children: \"To-Do List Application\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: toggleTheme,\n          sx: {\n            backgroundColor: isDarkMode ? '#2196F3' : '#0D47A1',\n            // Blue background depending on mode\n            color: '#FFFFFF',\n            padding: '10px 20px',\n            borderRadius: '8px',\n            boxShadow: 3,\n            '&:hover': {\n              backgroundColor: isDarkMode ? '#1976D2' : '#0B3C8C' // Hover effect\n            }\n          },\n          startIcon: isDarkMode ? /*#__PURE__*/_jsxDEV(Brightness7, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 37\n          }, this) : /*#__PURE__*/_jsxDEV(Brightness4, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 55\n          }, this) // Icon for switching themes\n          ,\n          children: !isMobile && `Switch to ${isDarkMode ? 'Light' : 'Dark'} Mode`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: false // No max-width to avoid default margin\n      ,\n      sx: {\n        paddingTop: 2,\n        paddingLeft: isMobile ? 2 : 2,\n        // Adjust left padding based on screen size\n        paddingRight: isMobile ? 2 : 2,\n        // Adjust right padding based on screen size\n        width: '100%' // Make sure the container spans full width\n      },\n      children: [/*#__PURE__*/_jsxDEV(OnboardingGuide, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"nsy3jj5HyYG13mXIpvIzzi9whQY=\", false, function () {\n  return [useMediaQuery];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Container","Typography","Box","Button","useMediaQuery","AppBar","Toolbar","ThemeProvider","CssBaseline","lightTheme","darkTheme","Brightness4","Brightness7","TaskList","OnboardingGuide","jsxDEV","_jsxDEV","App","_s","savedTheme","localStorage","getItem","isDarkMode","setIsDarkMode","isMobile","setItem","toggleTheme","theme","children","fileName","_jsxFileName","lineNumber","columnNumber","position","sx","backgroundColor","display","justifyContent","alignItems","variant","component","fontFamily","fontWeight","color","fontSize","marginLeft","onClick","padding","borderRadius","boxShadow","startIcon","maxWidth","paddingTop","paddingLeft","paddingRight","width","_c","$RefreshReg$"],"sources":["C:/Users/DELL/TodoApp/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { Container, Typography, Box, Button, useMediaQuery, AppBar, Toolbar } from '@mui/material';\nimport { ThemeProvider } from '@mui/material/styles';\nimport { CssBaseline } from '@mui/material';\nimport { lightTheme, darkTheme } from './theme'; // Import both themes\nimport { Brightness4, Brightness7 } from '@mui/icons-material'; // Import Material UI icons\nimport TaskList from './components/TaskList';\nimport OnboardingGuide from './components/OnboardingGuide';\n\nfunction App() {\n  const savedTheme = localStorage.getItem('theme');\n  const [isDarkMode, setIsDarkMode] = useState(savedTheme === 'dark');\n  const isMobile = useMediaQuery('(max-width:600px)'); // Media query for mobile screens\n\n  useEffect(() => {\n    // Save theme preference in localStorage when it changes\n    localStorage.setItem('theme', isDarkMode ? 'dark' : 'light');\n  }, [isDarkMode]);\n\n  const toggleTheme = () => {\n    setIsDarkMode(!isDarkMode);\n  };\n\n  return (\n    <ThemeProvider theme={isDarkMode ? darkTheme : lightTheme}>\n      <CssBaseline />\n      {/* AppBar Section */}\n      <AppBar position=\"static\" sx={{ backgroundColor: isDarkMode ? '#0D47A1' : '#2196F3' }}>\n        <Toolbar sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n          {/* Title aligned to the left */}\n          <Typography\n            variant=\"h3\"\n            component=\"h1\"\n            sx={{\n              fontFamily: '\"Roboto\", sans-serif', // Using the Roboto font\n              fontWeight: 'bold',\n              color: '#FFFFFF', // Text color is always white on AppBar\n              fontSize: '1.5rem',\n              marginLeft: isMobile ? 0 : 2, // Adjust left margin based on screen size\n            }}\n          >\n            To-Do List Application\n          </Typography>\n\n          {/* Button aligned to the right */}\n          <Button\n            variant=\"contained\"\n            onClick={toggleTheme}\n            sx={{\n              backgroundColor: isDarkMode ? '#2196F3' : '#0D47A1', // Blue background depending on mode\n              color: '#FFFFFF',\n              padding: '10px 20px',\n              borderRadius: '8px',\n              boxShadow: 3,\n              '&:hover': {\n                backgroundColor: isDarkMode ? '#1976D2' : '#0B3C8C', // Hover effect\n              },\n            }}\n            startIcon={isDarkMode ? <Brightness7 /> : <Brightness4 />} // Icon for switching themes\n          >\n            {/* Display the name and icon conditionally */}\n            {!isMobile && `Switch to ${isDarkMode ? 'Light' : 'Dark'} Mode`}\n          </Button>\n        </Toolbar>\n      </AppBar>\n\n      {/* Main Content Container */}\n      <Container\n        maxWidth={false} // No max-width to avoid default margin\n        sx={{\n          paddingTop: 2,\n          paddingLeft: isMobile ? 2 : 2, // Adjust left padding based on screen size\n          paddingRight: isMobile ? 2 : 2, // Adjust right padding based on screen size\n          width: '100%', // Make sure the container spans full width\n        }}\n      >\n        {/* Onboarding Guide and Task List */}\n        <OnboardingGuide />\n        <TaskList />\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}