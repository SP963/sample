{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\TodoApp\\\\client\\\\src\\\\components\\\\TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Box, Typography, CircularProgress } from '@mui/material';\nimport TaskItem from './TaskItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  // Fetch tasks from backend API\n  useEffect(() => {\n    axios.get(`${process.env.REACT_APP_API_URL}/tasks`).then(response => {\n      console.log(response);\n      setTasks(response.data); // Ensure this is returning all tasks\n      setLoading(false);\n    }).catch(error => {\n      console.error('Error fetching tasks:', error);\n      setLoading(false);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"To-Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Box, {\n      children: tasks.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        color: \"textSecondary\",\n        children: \"No tasks available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this) : tasks.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n        task: task\n      }, task._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 33\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"suOgpW3t2nMZzUgwyaGqSRlDRtE=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","useEffect","axios","Box","Typography","CircularProgress","TaskItem","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","loading","setLoading","get","process","env","REACT_APP_API_URL","then","response","console","log","data","catch","error","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","length","color","map","task","_id","_c","$RefreshReg$"],"sources":["C:/Users/DELL/TodoApp/client/src/components/TaskList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Box, Typography, CircularProgress } from '@mui/material';\r\nimport TaskItem from './TaskItem';\r\n\r\nconst TaskList = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Fetch tasks from backend API\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_URL}/tasks`)\r\n      .then((response) => {\r\n        console.log(response)\r\n        setTasks(response.data);  // Ensure this is returning all tasks\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching tasks:', error);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        To-Do List\r\n      </Typography>\r\n      {loading ? (\r\n        <CircularProgress />\r\n      ) : (\r\n        <Box>\r\n          {tasks.length === 0 ? (\r\n            <Typography variant=\"h6\" color=\"textSecondary\">\r\n              No tasks available\r\n            </Typography>\r\n          ) : (\r\n            tasks.map((task) => <TaskItem key={task._id} task={task} />)\r\n          )}\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,EAAEC,UAAU,EAAEC,gBAAgB,QAAQ,eAAe;AACjE,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACAC,SAAS,CAAC,MAAM;IACdC,KAAK,CACFa,GAAG,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,QAAQ,CAAC,CAC7CC,IAAI,CAAEC,QAAQ,IAAK;MAClBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrBR,QAAQ,CAACQ,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAE;MAC1BT,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CACDU,KAAK,CAAEC,KAAK,IAAK;MAChBJ,OAAO,CAACI,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CX,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,OAAA,CAACL,GAAG;IAAAuB,QAAA,gBACFlB,OAAA,CAACJ,UAAU;MAACuB,OAAO,EAAC,IAAI;MAACC,YAAY;MAAAF,QAAA,EAAC;IAEtC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,EACZnB,OAAO,gBACNL,OAAA,CAACH,gBAAgB;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAEpBxB,OAAA,CAACL,GAAG;MAAAuB,QAAA,EACDf,KAAK,CAACsB,MAAM,KAAK,CAAC,gBACjBzB,OAAA,CAACJ,UAAU;QAACuB,OAAO,EAAC,IAAI;QAACO,KAAK,EAAC,eAAe;QAAAR,QAAA,EAAC;MAE/C;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,GAEbrB,KAAK,CAACwB,GAAG,CAAEC,IAAI,iBAAK5B,OAAA,CAACF,QAAQ;QAAgB8B,IAAI,EAAEA;MAAK,GAArBA,IAAI,CAACC,GAAG;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CAAC;IAC5D;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACtB,EAAA,CAvCID,QAAQ;AAAA6B,EAAA,GAAR7B,QAAQ;AAyCd,eAAeA,QAAQ;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}